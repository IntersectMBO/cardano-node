-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | CBOR codecs for typed-protocols
--   
--   CBOR codecs for typed-protocols
@package typed-protocols-cborg
@version 0.3.0.0

module Network.TypedProtocol.Codec.CBOR

-- | Construct a <a>Codec</a> for a CBOR based serialisation format, using
--   lazy <a>ByteString</a>s.
--   
--   This is an adaptor between the <tt>cborg</tt> library and the
--   <a>Codec</a> abstraction.
--   
--   It takes encode and decode functions for the protocol messages that
--   use the CBOR library encoder and decoder.
mkCodecCborLazyBS :: forall ps m. MonadST m => (forall (st :: ps) (st' :: ps). StateTokenI st => ActiveState st => Message ps st st' -> Encoding) -> (forall (st :: ps) s. ActiveState st => StateToken st -> Decoder s (SomeMessage st)) -> Codec ps DeserialiseFailure m ByteString

-- | Construct a <a>Codec</a> for a CBOR based serialisation format, using
--   strict <a>ByteString</a>s.
--   
--   This is an adaptor between the <tt>cborg</tt> library and the
--   <a>Codec</a> abstraction.
--   
--   It takes encode and decode functions for the protocol messages that
--   use the CBOR library encoder and decoder.
--   
--   Note that this is <i>less</i> efficient than the
--   <a>mkCodecCborLazyBS</a> variant because it has to copy and
--   concatenate the result of the encoder (which natively produces
--   chunks).
mkCodecCborStrictBS :: forall ps m. MonadST m => (forall (st :: ps) (st' :: ps). StateTokenI st => ActiveState st => Message ps st st' -> Encoding) -> (forall (st :: ps) s. ActiveState st => StateToken st -> Decoder s (SomeMessage st)) -> Codec ps DeserialiseFailure m ByteString
convertCborDecoderBS :: forall s m a. Functor m => Decoder s a -> (forall b. ST s b -> m b) -> m (DecodeStep ByteString DeserialiseFailure m a)
convertCborDecoderLBS :: forall s m a. Monad m => Decoder s a -> (forall b. ST s b -> m b) -> m (DecodeStep ByteString DeserialiseFailure m a)
data () => DeserialiseFailure
DeserialiseFailure :: ByteOffset -> String -> DeserialiseFailure
