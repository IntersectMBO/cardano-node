#!/bin/bash -eu

if test "${CARDANO_CLI:-x}" = "x" ; then
  # Need this for when the test scripts are run directly instead of via the
  # Haskell test runner.
  if test -d dist-newstyle ; then
    CARDANO_CLI=$(find dist-newstyle -type f -name cardano-cli)
  elif test -d ../dist-newstyle ; then
    CARDANO_CLI=$(find ../dist-newstyle -type f -name cardano-cli)
    fi
  fi

# This variable is set by the test-cli executable.
type "$CARDANO_CLI" > /dev/null 2>&1 || {
    echo "No cardano-cli executable specified on command line or on path."
    echo "Maybe you need to do 'cabal build cardano-cli' first."
    exit 1
}

testname=$(basename "${cwd:?}")

# shellcheck disable=SC2034
DIFF=${USE_DIFF:-diff -u}

colourReset='\e[0m'
colourGreen='\e[0;32m'
colourRed='\e[0;31m'
colourYellow='\e[0;33m'

# Failure is the default!
RESULT="${colourRed}FAILED [ ${testname} ]${colourReset}"

ROOT=$(dirname "$0")/../../..
ROOT=$(cd "$ROOT" > /dev/null 2>&1 && pwd)
TMP="${ROOT}/tmp"
TEST="${TMP}/$$"
mkdir -p "${TEST}"

cleanup () {
    echo "Cleaning up ${TEST}"
    rm -rf "${TEST}"
    echo "${RESULT}"
    echo
}

trap cleanup EXIT

banner () {
    echo "${colourYellow}== $* ==${colourReset}"
    echo "Running in ${TEST}"
}

assert_file_exists () {
    if test ! -f "$1" ; then
        echo "Output file '$1' is missing."
        exit 1
    fi
}

report_result () {
  if test "${1}" = 0 ; then
    RESULT="${colourGreen}PASSED [ ${testname} ]${colourReset}"
    exit 0
  else
    RESULT="${colourRed}FAILED [ ${testname} ]${colourReset}"
    exit 1
  fi
}
