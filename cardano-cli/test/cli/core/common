#!/bin/bash -eu

OS=$(uname -s)

case $OS in
  Darwin )       export DATE=gdate; export SED=gsed;;
  * )            export DATE=date ; export SED=sed ;; esac

if test "${CARDANO_CLI:-x}" = "x" ; then
  # Need this for when the test scripts are run directly instead of via the
  # Haskell test runner.
  if test -d dist-newstyle ; then
    CARDANO_CLI=$(pwd)/$(find dist-newstyle -type f -name cardano-cli)
  elif test -d ../dist-newstyle ; then
    CARDANO_CLI=$(pwd)/$(find ../dist-newstyle -type f -name cardano-cli)
    fi
  fi

# This variable is set by the test-cli executable.
type "$CARDANO_CLI" > /dev/null 2>&1 || {
    echo "No cardano-cli executable specified on command line or on path."
    echo "Maybe you need to do 'cabal build cardano-cli' first."
    exit 1
}

testname=$(basename "${cwd:?}")

# shellcheck disable=SC2034
DIFF=${USE_DIFF:-diff -u}

colourReset='\e[0m'
colourGreen='\e[0;32m'
colourRed='\e[0;31m'
colourYellow='\e[0;33m'

# Failure is the default!
RESULT="${colourRed}FAILED [ ${testname} ]${colourReset}"

ROOT=$(dirname "$0")/../../..
ROOT=$(cd "$ROOT" > /dev/null 2>&1 && pwd)
TMP="${ROOT}/tmp"
TEST_DIR="${TMP}/$$"
mkdir -p "${TEST_DIR}"

# Need this if running outside "cabal test cardano-cli".
if test -d cardano-cli ; then
  cd cardano-cli || exit 1
  fi

cleanup () {
    echo "Cleaning up ${TEST_DIR}"
    rm -rf "${TEST_DIR}"
    echo "${RESULT}"
    echo
}

trap cleanup EXIT

banner () {
    echo "${colourYellow}== $* ==${colourReset}"
    echo "Running in ${TEST_DIR}"
}

assert_string () {
  count=$(grep -c "$1" "$2")
  if test "${count}" != 1 ; then
    echo "$2: ${colourRed}Expected '$1'${colourReset}"
    cat "$2"
    exit 1
    fi
}

assert_line_count () {
  line_count=$(wc -l < "$2" | xargs)
  if test "${line_count}" != "$1" ; then
    echo "$2: line count is ${line_count} "
    cat "$2"
    exit 1
    fi
}

assert_file_exists () {
  if test ! -f "$1" ; then
    echo "Output file '$1' is missing."
    exit 1
    fi
}

fail_on_error () {
  if test "$1" -ne 0 ; then
    echo "fail_on_error: $1"
    exit "$1"
    fi
}

report_result () {
  if test "${1}" = 0 ; then
    RESULT="${colourGreen}PASSED [ ${testname} ]${colourReset}"
    exit 0
  else
    RESULT="${colourRed}FAILED [ ${testname} ]${colourReset}"
    exit 1
  fi
}

setup_data_dir () {
  DATA_DIR="test/cli/${1}/data"
  if test -d cardano-cli ; then
    DATA_DIR="cardano-cli/${DATA_DIR}"
    fi
}
