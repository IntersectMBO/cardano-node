name: Check mainnet configuration

on:
  push:
  merge_group:

# When pushing branches (and/or updating PRs), we do want to cancel previous
# build runs. We assume they are stale now; and do not want to spend CI time and
# resources on continuing to continue those runs. This is what the concurrency.group
# value lets us express. When using merge queues, we now have to consider
# - runs triggers by commits per pull-request
#   we want to cancel any previous run. So they should all get the same group (per PR)
# - runs refs/heads/gh-readonly-queue/<target branch name> (they should all get their
#   unique git ref, we don't want to cancel any of the ones in the queue)
# - if it's neither, we fall back to the run_id (this is a unique number for each
#   workflow run; it does not change if you "rerun" a job)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.type }}-${{ startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && github.ref || github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:

    - name: Install Nix
      uses: cachix/install-nix-action@v18
      with:
        # Use last stable nixos channel and the same nix as in channel:
        install_url: https://releases.nixos.org/nix/nix-2.11.1/install
        nix_path: nixpkgs=channel:nixos-22.11
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          experimental-features = nix-command flakes
          allow-import-from-derivation = true
          substituters = https://cache.nixos.org https://cache.iog.io
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

    - uses: actions/checkout@v2

    - name: Refresh cardano-node mainnet configuration
      run: |
        nix build --no-update-lock-file .#hydraJobs.cardano-deployment
        SOURCE=$(pwd)/result
        TARGET=$(pwd)/configuration/cardano

        copyFile() {
          echo $1
          cp ${SOURCE}/$1 ${TARGET}/$1
        }

        copyFile "mainnet-alonzo-genesis.json"
        copyFile "mainnet-byron-genesis.json"
        copyFile "mainnet-config.json"
        copyFile "mainnet-shelley-genesis.json"
        copyFile "mainnet-topology.json"

    - name: Check mainnet for mainnet configuration differences
      run: |
        git diff --exit-code
