-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Convert text into slugs.
--   
--   Convert a <a>Text</a> object into a visually pleasant URL component.
@package slugify
@version 0.1.0.2


-- | The module to convert text into <i>slug</i>s. A slug is a hyphen
--   separated string of words. Slugs are often used to make visually
--   pleasant URLs by transforming for example the title of an article into
--   a slug, and use this in the URL, for more information see the
--   <a>Wikipedia section</a>.
module Text.Slugify

-- | The given mode to slugify a <a>Text</a> object.
data SlugMode

-- | Slugify by removing diacritics and only retain ASCII characters.
SlugAscii :: SlugMode

-- | Slugify by allowing unicode characters.
SlugUnicode :: SlugMode

-- | Check if the given <a>Char</a>acter is a word separator, for the given
--   slugify algorithm.
isWordSeparator :: Char -> Bool

-- | Check if the given <a>Char</a>acter is considered a word character for
--   the slugify algorithm.
isWordChar :: Char -> Bool

-- | Check if the given character is retained by the slugify algorithm.
isRetainChar :: Char -> Bool

-- | Slugify the given <a>Text</a> object and remove diacritics and convert
--   characters to the corresponding ASCII equivalent.
slugify :: Text -> Text

-- | Slugify the given <a>Text</a> object and retain Unicode characters.
slugifyUnicode :: Text -> Text

-- | Slugify the given <a>Text</a> with the given <a>SlugMode</a>.
slugifyWith :: SlugMode -> Text -> Text
instance GHC.Show.Show Text.Slugify.SlugMode
instance GHC.Read.Read Text.Slugify.SlugMode
instance GHC.Classes.Ord Text.Slugify.SlugMode
instance GHC.Classes.Eq Text.Slugify.SlugMode
instance GHC.Enum.Enum Text.Slugify.SlugMode
instance GHC.Enum.Bounded Text.Slugify.SlugMode
